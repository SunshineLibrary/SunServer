.page-header
  %h1
    相册
    \#{best_in_place @gallery_activity, :name, :type => :input}
    %span.label= Activity.type_to_name('gallery')
%p
  %span.label.label-info 提示
  暂时不支持调整图片顺序
= form_for @gallery_activity, :class => "form-horizontal" do |f|
  %fieldset
    #all-images
      %br/
      .page-header
        %h3 图片列表
      #image-list
        = f.fields_for :images do |builder|
          = render "image_fields", :f => builder
        = link_to_add_problem_choice "添加图片", f
%span{:style => "display: none"}= text_field_tag :quiz_activity_id, @quiz_activity.id
%span{:style => "display: none"}= text_field_tag :section_id, @section_id
.form-actions
  = submit_tag "保存", :class => 'btn btn-primary'
  = link_to "取消", quiz_activity_path(@quiz_activity, :section_id => @section_id), :class => 'btn'
.controls
  = image_tag @problem.image.url if @problem.image?
.control-group
  = f.label :image, "附图 (例如几何图形)", :class=>"control-label"
  .controls
    = f.file_field :image, :class => "input-xlarge"
.control-group
  #answer.input-prepend
    %span.add-on 答案
    = f.text_field :answer, :class => "span1"
    %span.help-inline 选择题填写选项（不区分大小写），填空题直接填写答案
- if @problem.is_mc or @problem.is_mamc
  #all-choices
    %br/
    .page-header
      %h3 选择题所有选项
    #choice-list
      = f.fields_for :problem_choices do |builder|
        = render "problem_choice_fields", :f => builder
      = link_to_add_problem_choice "添加选项", f
%span{:style => "display: none"}= text_field_tag :quiz_activity_id, @quiz_activity.id
%span{:style => "display: none"}= text_field_tag :section_id, @section_id
.form-actions
  = submit_tag "保存", :class => 'btn btn-primary'
  = link_to "取消", quiz_activity_path(@quiz_activity, :section_id => @section_id), :class => 'btn'
%script{:type => "text/x-mathjax-config;executed=true"}
  MathJax.Hub.Config({
  extensions: ["asciimath2jax.js"],
  jax: ["input/AsciiMath","output/HTML-CSS"],
  tex2jax: {inlineMath: [["`","`"]]}
  });
= mathjax_tag :config => 'AM_HTMLorMML-full.js'
:javascript
  $("#problem-body-input").on("keyup", function() {
    var formulaInput = $(this).val();
    $('#problem-body-preview').text(formulaInput);
    MathJax.Hub.Queue(["Typeset", MathJax.Hub, $('#problem-body-preview').val]);
  });
  
  function bind_preview_to_problem_choice(e) {
    var formulaInput = $(e).val();
    var temp = $(e).parent().next().children().first();
    temp.text(formulaInput);
    MathJax.Hub.Queue(["Typeset", MathJax.Hub, temp.val]);
  };
  
  $(".problem_choice_body_field").on("keyup", function() {
    bind_preview_to_problem_choice(this);
  });
  
  function add_problem_choice_fields(link, content) {
    var new_id = new Date().getTime();
    var regexp = new RegExp("new_problem_choice", "g")
    $("#add_problem_choice_link").before(content.replace(regexp, new_id));
    $(".problem_choice_body_field").on("keyup", function() {
      bind_preview_to_problem_choice(this);
    });
  };
