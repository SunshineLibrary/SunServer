<p id="notice"><%= notice %></p>

<div class="page-header">
  <h1>编辑题目</h1>
  </br>
  <p><span class="label label-info">提示</span> 直接输入文字，数学公式使用键盘左上角的反引号包含起来（假设反引号为'），例如： 已知 'x/5 = 3'，求x</p>
</div>


<%= form_for @problem, :class => "form-horizontal" do |f| %>
  <h1 class="label label-inverse"><%= @problem.print_type %></h1>
  </br>
  <fieldset>
  
  <div id="problem-body" class="control-group">
    <%= f.text_area :body, :id => "problem-body-input", :class => "span6", :placeholder => "填写问题……", :rows => 6 %>
  </div>
  <div class="row control-group">
    <span id="problem-body-preview" class="well span6"></span>
  </div>
  
  <div class="control-group">
    <div id="answer" class="input-prepend">
      <span class="add-on">答案</span>
      <%= f.text_field :answer, :class => "span1" -%>
      <span class="help-inline">选择题填写选项（不区分大小写），填空题直接填写答案</span>
    </div>
  </div>
  
  <% if @problem.is_mc or @problem.is_mamc %>
  <div id="all-choices">
    <br/>
    <div class="page-header">
      <h3>选择题所有选项</h3>
    </div>
    <div id="choice-list">
    <%= f.fields_for :problem_choices do |builder| %>
      <%= render "problem_choice_fields", :f => builder %>
    <% end %>
    <%= link_to_add_problem_choice "添加选项", f %>
    </div>
  <% end %>
  <span style="display: none"><%= text_field_tag :quiz_activity_id, @quiz_activity.id %></span>
  <span style="display: none"><%= text_field_tag :section_id, @section_id %></span>
  
  <div class="form-actions">
    <%= submit_tag "保存", :class => 'btn btn-primary' %>
    <%= link_to "取消", quiz_activity_path(@quiz_activity, :section_id => @section_id), :class => 'btn'  %>
  </div>
  
  </fieldset>
<% end %>




<script type="text/x-mathjax-config;executed=true">
  MathJax.Hub.Config({
  extensions: ["asciimath2jax.js"],
  jax: ["input/AsciiMath","output/HTML-CSS"],
  tex2jax: {inlineMath: [["`","`"]]}
  });
</script>
<%= mathjax_tag :config => 'AM_HTMLorMML-full.js' %>

<script type="text/javascript">
  $("#problem-body-input").on("keyup", function() {
    var formulaInput = $(this).val();
    $('#problem-body-preview').text(formulaInput);
    MathJax.Hub.Queue(["Typeset", MathJax.Hub, $('#problem-body-preview').val]);
  });
  
  function bind_preview_to_problem_choice(e) {
    var formulaInput = $(e).val();
    var temp = $(e).parent().next().children().first();
    temp.text(formulaInput);
    MathJax.Hub.Queue(["Typeset", MathJax.Hub, temp.val]);
  };
  
  $(".problem_choice_body_field").on("keyup", function() {
    bind_preview_to_problem_choice(this);
  });
  
  function add_problem_choice_fields(link, content) {
    var new_id = new Date().getTime();
    var regexp = new RegExp("new_problem_choice", "g")
    $("#add_problem_choice_link").before(content.replace(regexp, new_id));
    $(".problem_choice_body_field").on("keyup", function() {
      bind_preview_to_problem_choice(this);
    });
  };
</script>

